/**************************************************************************************************
 * @file        istepper_hal.hpp
 * @author      Thomas
 * @brief       HAL interface layer for the Stepper task (header)
 **************************************************************************************************
  @ attention

  << To be Introduced >>

 *************************************************************************************************/
/**************************************************************************************************
 * How to use
 * ----------
 * Header includes all the parameters that are output of the FAN Task.
 * Function - interfaceInitialise() is to be called prior to signals are used correctly.
 *************************************************************************************************/
#ifndef ISTEPPER_HAL_HPP_
#define ISTEPPER_HAL_HPP_

/**************************************************************************************************
 * Include all files that are needed to understand this header
 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 *************************************************************************************************/
// C System Header(s)
// ------------------
#include <stdint.h>

// C++ System Header(s)
// --------------------
// None

// Other Libraries
// ---------------
// None

// Project Libraries
// -----------------
#include "tasks/1_hardware_arbitration_layer/ihal_management.hpp"

//=================================================================================================

namespace _ihal::_istepper {
/**************************************************************************************************
 * Exported MACROS
 * ~~~~~~~~~~~~~~~~~~~~~~~
 *************************************************************************************************/
// None

/**************************************************************************************************
 * Exported Variables
 * ~~~~~~~~~~~~~~~~~~
 *************************************************************************************************/
extern Semaphore< uint8_t > enable;
extern Semaphore< uint8_t > microstep;
extern Semaphore< uint8_t > direction;
extern Semaphore<uint16_t > frequency;

extern Semaphore<uint32_t > calc_position;

/**************************************************************************************************
 * Exported types
 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 *************************************************************************************************/
// None

/**************************************************************************************************
 * Exported function prototypes
 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 *************************************************************************************************/
void interfaceInitialise(void);         // Initialise all ispi parameters

}
#endif /* ISTEPPER_HAL_HPP_ */
